// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
  log             = ["debug", "query"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SubmissionStatus {
  SUBMITTED
  VERIFIED
  PROCESSING
  FLAGGED
  FAILED
}

model Submission {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  submitterId    String
  submissionData Json
  createdAt      DateTime         @default(now())
  capturedAt     DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  status         SubmissionStatus @default(SUBMITTED)
  spdpVillageId  Int              @default(0)
  citizenId      String?
  errors         Json?
  meta           Json?
  Feedback       Feedback[]
}

model Feedback {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  count           Int        @default(1)
  feedbackData    Json
  feedbackHistory Json[]
  createdAt       DateTime   @default(now())
  updateAt        DateTime   @updatedAt
  submission      Submission @relation(fields: [submissionId], references: [id])
  submissionId    String     @db.Uuid
}

enum defaultPassword {
  ABCD
}

model User {
  id              Int     @id @default(autoincrement())
  userId          String  @unique
  password        String?
  meta            Json?
  active          Boolean @default(true)
  surveyAssigned  Int     @default(0)
  surveyCompleted Int     @default(0)
}

model Admin {
  userId       String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  mobile       String     @unique
  active       Boolean    @default(true)
  meta         Json?
  isSuperAdmin Boolean    @default(false)
  Schedule     Schedule[]
}

enum ScheduleStatus {
  SCHEDULED
  CANCEL
  DONE
  PROCESSING
}

model Schedule {
  id           Int            @id @unique @default(autoincrement())
  dateTime     DateTime       @default(now())
  enumeratorId String
  status       ScheduleStatus @default(SCHEDULED)
  formId       String
  locationId   Int
  meta         Json?
  location     VillageData?   @relation(fields: [locationId], references: [spdpVillageId])
  assignerId   String         @db.Uuid
  assignedBy   Admin?         @relation(fields: [assignerId], references: [userId])
}

enum VillageDataStatus {
  ASSIGNED
  COMPLETED
  PROCESSING
  UNASSIGNED
}

enum TspBlockStatus {
  Y
  N
}

model VillageData {
  id              Int
  stateCode       Int
  stateName       String
  districtCode    Int
  districtName    String
  itdaName        String
  blockCode       Int
  blockName       String
  isTspBlock      String
  gpCode          Int
  gpName          String
  surveySubmitted Int               @default(0)
  surveyToConduct Int               @default(0)
  flagsRaised     Int               @default(0)
  spdpVillageId   Int               @id @unique
  villageName     String
  Schedule        Schedule[]
  meta            Json?
  submissions     Json?
  status          VillageDataStatus @default(UNASSIGNED)
}

model scheme_transaction {
  id                       Int     @id @default(autoincrement())
  scheme_code              String
  aadhaar_number           String  @db.VarChar(12)
  aadhaar_reference_number String  @db.VarChar(13)
  unique_beneficiary_id    String  @db.VarChar(127)
  financial_year           String  @db.VarChar(15)
  transaction_type         String  @db.VarChar(127)
  transaction_amount       Int
  in_kind_benefit_detail   String  @db.VarChar(127)
  transaction_date         String  @db.VarChar(15)
  remarks                  String?
  department_data          Json?
  user_id                  String  @db.Uuid
}

model transaction_history_table {
  id                     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  request_body           Json[]
  total_records          Int
  valid_records          Int
  invalid_records        Int
  contain_errors         Boolean  @default(false)
  valid_records_saved    Boolean  @default(false)
  errors                 Json
  user_id                String   @db.Uuid
  transaction_start_time DateTime
  transaction_end_time   DateTime
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
}
